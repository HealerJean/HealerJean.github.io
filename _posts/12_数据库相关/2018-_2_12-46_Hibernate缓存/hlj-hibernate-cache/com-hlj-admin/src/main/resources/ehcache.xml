<!--
  ~ Hibernate, Relational Persistence for Idiomatic Java
  ~
  ~ Copyright (c) 2007, Red Hat Middleware LLC or third-party contributors as
  ~ indicated by the @author tags or express copyright attribution
  ~ statements applied by the authors. All third-party contributions are
  ~ distributed under license by Red Hat Middleware LLC.
  ~
  ~ This copyrighted material is made available to anyone wishing to use, modify,
  ~ copy, or redistribute it subject to the terms and conditions of the GNU
  ~ Lesser General Public License, as published by the Free Software Foundation.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
  ~ or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public License
  ~ for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this distribution; if not, write to:
  ~ Free Software Foundation, Inc.
  ~ 51 Franklin Street, Fifth Floor
  ~ Boston, MA  02110-1301  USA
  -->
<ehcache xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="http://www.ehcache.org/ehcache.xsd"
         updateCheck="true" monitoring="autodetect"
         dynamicConfig="true">

    <!--diskStore元素是可选的，非必须的。如果不使用磁盘存储,只需要将diskStore注释掉即可；
    如果使用，需要在ehcache.xml文件中的ehcahce元素下的定义一个diskStore元素并指定其path属性。-->
    <diskStore path="/Users/healerjean/Desktop/twocache"/>

    <transactionManagerLookup class="net.sf.ehcache.transaction.manager.DefaultTransactionManagerLookup"
                              properties="jndiName=java:/TransactionManager" propertySeparator=";"/>
    <!--初始化缓存监听-->
    <cacheManagerEventListenerFactory class="com.hlj.moudle.cache.config.cachelistener.CustomerCacheManagerEventListenerFactory" properties=""/>


    <!-- Sets the path to the directory where cacheSerializer .data files are created.

         If the path is a Java System Property it is replaced by
         its value in the running VM.

         The following properties are translated:
         user.home - User's home directory
         user.dir - User's current working directory
         java.io.tmpdir - Default temp file path -->
    <!--<diskStore path="c:\dev\cacheSerializer"/>-->

    <!--
       name：Cache的唯一标识
       maxElementsInMemory：内存中最大缓存对象数
       maxElementsOnDisk：磁盘中最大缓存对象数，若是0表示无穷大
       eternal：Element是否永久有效，一但设置了，timeout将不起作用
       overflowToDisk：配置此属性，当内存中Element数量达到maxElementsInMemory时，Ehcache将会Element写到磁盘中
       timeToIdleSeconds：设置Element在失效前的允许闲置时间。仅当element不是永久有效时使用，可选属性，默认值是0，也就是可闲置时间无穷大
       timeToLiveSeconds：设置Element在失效前允许存活时间。最大时间介于创建时间和失效时间之间。仅当element不是永久有效时使用，默认是0.，也就是element存活时间无穷大
       diskPersistent：是否缓存虚拟机重启期数据
       diskExpiryThreadIntervalSeconds：磁盘失效线程运行时间间隔，默认是120秒
       diskSpoolBufferSizeMB：这个参数设置DiskStore（磁盘缓存）的缓存区大小。默认是30MB。每个Cache都应该有自己的一个缓冲区
       memoryStoreEvictionPolicy：当达到maxElementsInMemory限制时，Ehcache将会根据指定的策略去清理内存。默认策略是LRU（最近最少使用）。你可以设置为FIFO（先进先出）或是LFU（较少使用）
       -->

    <defaultCache
            maxElementsInMemory="10000"
            eternal="false"
            timeToIdleSeconds="600"
            timeToLiveSeconds="600"
            overflowToDisk="true"
            maxElementsOnDisk="10000000"
            diskPersistent="false"
            diskExpiryThreadIntervalSeconds="120"
            diskSpoolBufferSizeMB="64"
            memoryStoreEvictionPolicy="LRU"
    >
    </defaultCache>

    <cache name="cacheSerializer.hibernate.twocache"
           maxEntriesLocalHeap="5000"
           eternal="true"
           timeToIdleSeconds="600"
           timeToLiveSeconds="600">
        <cacheEventListenerFactory class="com.hlj.moudle.cache.config.cachelistener.CustomerCacheEventListenerFactory" />
    </cache>

</ehcache>
