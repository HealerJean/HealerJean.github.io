<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ScfUserInfoMapper">
	<resultMap id="BaseResultMap" type="ScfUserInfo">
		<id column="ID" jdbcType="BIGINT" property="id" />
		<result column="real_name" jdbcType="VARCHAR" property="realName" />
		<result column="username" jdbcType="VARCHAR" property="username" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="telephone" jdbcType="VARCHAR" property="telephone" />
		<result column="gender" jdbcType="VARCHAR" property="gender" />
		<result column="user_type" jdbcType="VARCHAR" property="userType" />
		<result column="status" jdbcType="VARCHAR" property="status" />
		<result column="create_user" jdbcType="BIGINT" property="createUser" />
		<result column="create_name" jdbcType="VARCHAR" property="createName" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
		<result column="update_user" jdbcType="BIGINT" property="updateUser" />
		<result column="update_name" jdbcType="VARCHAR" property="updateName" />
		<result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
		<association property="department" javaType="ScfUserDepartment" >
			<result column="department_id" jdbcType="BIGINT" property="id" />
			<result column="department_name" jdbcType="VARCHAR" property="departmentName" />
			<result column="department_desc" jdbcType="VARCHAR" property="departmentDesc" />
			<result column="pid" jdbcType="BIGINT" property="pid" />
			<result column="department_status" jdbcType="VARCHAR" property="status" />
		</association>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<trim prefix="(" prefixOverrides="and" suffix=")">
				<if test="username != null">
					and username = #{username,jdbcType=VARCHAR}
				</if>
				<if test="realName != null">
					and real_name = #{realName,jdbcType=VARCHAR}
				</if>
				<if test="email != null">
					and email = #{email,jdbcType=VARCHAR}
				</if>
				<if test="telephone != null">
					and telephone = #{telephone,jdbcType=VARCHAR}
				</if>
				<if test="gender != null">
					and gender = #{gender,jdbcType=VARCHAR}
				</if>
				<if test="password != null">
					and password = #{password,jdbcType=VARCHAR}
				</if>
				<if test="userType != null">
					and user_type = #{userType,jdbcType=VARCHAR}
				</if>
				<if test="status != null">
					and status = #{status,jdbcType=VARCHAR}
				</if>
				<if test="createUser != null and createUser != ''">
					and create_user = #{createUser,jdbcType=BIGINT}
				</if>
				<if test="createName != null">
					and create_name = #{createName,jdbcType=VARCHAR}
				</if>
				<if test="updateUser != null and updateUser != ''">
					and update_user = #{updateUser,jdbcType=BIGINT}
				</if>
				<if test="updateName != null">
					and update_name = #{updateName,jdbcType=VARCHAR}
				</if>
				<if test="ids != null and ids.size() > 0">
					and id in
					<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
			</trim>
		</where>
	</sql>
	<sql id="Example_Set_Clause">
		<set>
			<trim suffixOverrides=",">
				<if test="username != null">
					username = #{username,jdbcType=VARCHAR},
				</if>
				<if test="realName != null">
					real_name = #{realName,jdbcType=VARCHAR},
				</if>
				<if test="email != null">
					email = #{email,jdbcType=VARCHAR},
				</if>
				<if test="telephone != null">
					telephone = #{telephone,jdbcType=VARCHAR},
				</if>
				<if test="gender != null">
					gender = #{gender,jdbcType=VARCHAR},
				</if>
				<if test="password != null">
					password = #{password,jdbcType=VARCHAR},
				</if>
				<if test="userType != null">
					user_type = #{userType,jdbcType=VARCHAR},
				</if>
				<if test="status != null">
					status = #{status,jdbcType=VARCHAR},
				</if>
				<if test="createUser != null">
					create_user = #{createUser,jdbcType=BIGINT},
				</if>
				<if test="createName != null">
					create_name = #{createName,jdbcType=VARCHAR},
				</if>
				<if test="updateUser != null">
					update_user = #{updateUser,jdbcType=BIGINT},
				</if>
				<if test="updateName != null">
					update_name = #{updateName,jdbcType=VARCHAR},
				</if>
				UPDATE_TIME = NOW(),
			</trim>
		</set>
	</sql>
	<sql id="Base_Column_List">
		id,
		username,
		real_name,
		email,
		telephone,
		gender,
		password,
		user_type,
		status,
		create_user,
		create_name,
		create_time,
		update_user,
		update_name,
		update_time
	</sql>
	<sql id="Base_Set_Clause">
		<set>
			<trim suffixOverrides=",">
				username = #{username,jdbcType=VARCHAR},
				real_name = #{realName,jdbcType=VARCHAR},
				email = #{email,jdbcType=VARCHAR},
				telephone = #{telephone,jdbcType=VARCHAR},
				gender = #{gender,jdbcType=VARCHAR},
				password = #{password,jdbcType=VARCHAR},
				user_type = #{userType,jdbcType=VARCHAR},
				status = #{status,jdbcType=VARCHAR},
				create_user = #{createUser,jdbcType=BIGINT},
				create_name = #{createName,jdbcType=VARCHAR},
				update_user = #{updateUser,jdbcType=BIGINT},
				update_name = #{updateName,jdbcType=VARCHAR},
			</trim>
		</set>
	</sql>
	<sql id="Selective_Column_List">
		ID,
		<if test="username != null">
			username,
		</if>
		<if test="realName != null">
			real_name,
		</if>
		<if test="email != null">
			email,
		</if>
		<if test="telephone != null">
			telephone,
		</if>
		<if test="gender != null">
			gender,
		</if>
		<if test="password != null">
			password,
		</if>
		<if test="userType != null">
			user_type,
		</if>
		<if test="status != null">
			status,
		</if>
		<if test="createUser != null">
			create_user,
		</if>
		<if test="createName != null">
			create_name,
		</if>
		CREATE_TIME,
		<if test="updateUser != null">
			update_user,
		</if>
		<if test="updateName != null">
			update_name,
		</if>
	</sql>
	<sql id="Base_Value_List">
		#{id,jdbcType=BIGINT},
		#{username,jdbcType=VARCHAR},
		#{realName,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{telephone,jdbcType=VARCHAR},
		#{gender,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{userType,jdbcType=VARCHAR},
		#{status,jdbcType=VARCHAR},
		#{createUser,jdbcType=BIGINT},
		#{createName,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateUser,jdbcType=BIGINT},
		#{updateName,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP},
	</sql>
	<sql id="Selective_Value_List">
		#{id},
		<if test="username != null">
			#{username,jdbcType=VARCHAR},
		</if>
		<if test="realName != null">
			#{realName,jdbcType=VARCHAR},
		</if>
		<if test="email != null">
			#{email,jdbcType=VARCHAR},
		</if>
		<if test="telephone != null">
			#{telephone,jdbcType=VARCHAR},
		</if>
		<if test="gender != null">
			#{gender,jdbcType=VARCHAR},
		</if>
		<if test="password != null">
			#{password,jdbcType=VARCHAR},
		</if>
		<if test="userType != null">
			#{userType,jdbcType=VARCHAR},
		</if>
		<if test="status != null">
			#{status,jdbcType=VARCHAR},
		</if>
		<if test="createUser != null">
			#{createUser,jdbcType=BIGINT},
		</if>
		<if test="createName != null">
			#{createName,jdbcType=VARCHAR},
		</if>
		NOW(),
		<if test="updateUser != null">
			#{updateUser,jdbcType=BIGINT},
		</if>
		<if test="updateName != null">
			#{updateName,jdbcType=VARCHAR},
		</if>
	</sql>

	<select id="selectByExample" parameterType="ScfUserInfoQuery" resultMap="BaseResultMap">
		select
		<trim suffixOverrides=",">
			<include refid="Base_Column_List" />
		</trim>
		from scf_user_info
		<include refid="Example_Where_Clause" />
		<!-- order by CREATE_DATE -->
	</select>
	<select id="selectByPrimaryKey" parameterType="Long" resultMap="BaseResultMap">
		select
		<trim suffixOverrides=",">
			<include refid="Base_Column_List" />
		</trim>
		from scf_user_info
		where ID = #{id,jdbcType=SMALLINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="Long">
		delete from scf_user_info
		where ID = #{id,jdbcType=SMALLINT}
	</delete>
	<delete id="deleteByExample" parameterType="ScfUserInfoQuery">
		delete from scf_user_info
		<include refid="Example_Where_Clause" />
	</delete>
	<insert id="insert" parameterType="ScfUserInfo">
		insert into scf_user_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Base_Column_List" />
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<include refid="Base_Value_List" />
		</trim>
	</insert>
	<insert id="insertSelective" parameterType="ScfUserInfo" useGeneratedKeys="true" keyProperty="id">
		insert into scf_user_info
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<include refid="Selective_Column_List" />
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<include refid="Selective_Value_List" />
		</trim>
	</insert>
	<select id="countByExample" parameterType="ScfUserInfoQuery" resultType="java.lang.Integer">
		select count(*) from scf_user_info
		<include refid="Example_Where_Clause" />
	</select>
	<update id="updateByPrimaryKeySelective" parameterType="ScfUserInfo">
		update scf_user_info
		<include refid="Example_Set_Clause" />
		where ID = #{id,jdbcType=SMALLINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="ScfUserInfo">
		update scf_user_info
		<include refid="Base_Set_Clause" />
		where ID = #{id,jdbcType=SMALLINT}
	</update>

	<select id="selectPageByExample" parameterType="ScfUserInfoQuery" resultMap="BaseResultMap">
		select
		<trim suffixOverrides=",">
			<include refid="Base_Column_List" />
		</trim>
		from scf_user_info
		<include refid="Example_Where_Clause" />
		<![CDATA[ limit #{startRow},#{endRow} ]]>
		<!-- order by CREATE_DATE -->
	</select>




	<!--根据部门查询用户-->
	<select id="countUserByDepartment" resultType="java.lang.Integer" parameterType="ScfUserInfoQuery">
		select count(1) from scf_user_info u
		left join scf_user_ref_user_department rud on rud.ref_user_id = u.id
		left join scf_user_department d on rud.ref_department_id = d.id
		<where>
			<trim prefix="(" prefixOverrides="and" suffix=")">
				<if test="departmentIds != null and departmentIds.size() > 0">
					d.id in
					<foreach collection="departmentIds" item="item" index="index" open="(" close=")" separator=",">
						#{item}
					</foreach>
				</if>
				and u.user_type = #{userType,jdbcType=VARCHAR}
				<if test="username != null and username != ''">
					and u.username like CONCAT('%', #{username,jdbcType=VARCHAR} ,'%')
				</if>
			</trim>
		</where>
	</select>
	<select id="selectUserByDepartment" resultMap="BaseResultMap" parameterType="ScfUserInfoQuery">
		select
		u.id,
		u.username,
		u.real_name,
		u.email,
		u.telephone,
		u.gender,
		u.user_type,
		u.status,
		d.id as department_id,
		d.department_name,
		d.department_desc,
		d.pid,
		d.status as department_status
		from scf_user_info u
		left join scf_user_ref_user_department rud on rud.ref_user_id = u.id
		left join scf_user_department d on rud.ref_department_id = d.id
		<where>
			<trim prefix="(" prefixOverrides="and" suffix=")">
				<if test="departmentIds != null and departmentIds.size() > 0">
					d.id in
					<foreach collection="departmentIds" item="item" index="index" open="(" close=")" separator=",">
						#{item}
					</foreach>
				</if>
				and u.user_type = #{userType,jdbcType=VARCHAR}
				<if test="username != null and username != ''">
					and u.username like CONCAT('%', #{username,jdbcType=VARCHAR} ,'%')
				</if>
			</trim>
		</where>
		<![CDATA[ limit #{startRow},#{endRow} ]]>
	</select>

</mapper>
